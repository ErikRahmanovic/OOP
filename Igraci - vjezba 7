//Potrebno je napraviti ispravne klase kako bi donji programski odsječak funkcionirao ispravno.Potrebno je modelirati nasljeđivanje, te osigurati da postoji apstraktna klasa u modelu(ispravno odabrati metodu koja je čista virtualna).
//
//Dodatno, plaća za se računa na način da se osnovici plaće pribroje bonusi :
//
//za igrača, svaki 10. gol donosi 10 % osnovice kao bonus; dok svaka 5. asistencija donosi isto 10 % osnovice kao bonus
//za trenera, svaka 5. pobjeda donosi bonus od 10 % osnovice, svaki 10. remi(nerijeseno) donosi isto 10 % osnovice, dok se za svaki 8. poraz skida 10 % osnovice
//za detalje, pogledati primjere ispisa koda
//
//int main()
//{
//    Igrac i("Luka", "Modric", 100000); //Ime, prezime, osnovica plaće
//    i.dodajGolove(7);
//    i.dodajAsistencije(12);
//    i.ispis(); //Luka Modric - golova: 7, asistencija: 12
//    cout << "Placa: " << i.izracunPlace() << endl; //Placa: 120000
//
//    Igrac i2("C", "Ronaldo", 234505);
//    i2.dodajGolove(57);
//    i2.dodajAsistencije(32);
//    i2.ispis(); //C Ronaldo - Golova : 57, Asistencije : 32.
//    cout << "Placa: " << i2.izracunPlace() << endl; //Placa : 492461
//
//    Trener t1("Hose", "Murinjo", 143009); //Ime, prezime, osnovica plaće
//    t1.dodajPobjede(88); //Dodati broj pobjeda (W)
//    t1.dodajRemi(12); //Dodati broj neriješenih utakmica (D)
//    t1.dodajIzgubljene(0); //Dodati broj izgubljenih (L)
//    t1.ispis(); //Hose Murinjo - Omjer (W/D/L): 88 / 12 / 0
//    cout << "Placa: " << t1.izracunPlace() << endl; //Placa: 400425
//
//    t1.dodajPobjede(11);
//    t1.dodajIzgubljene(47);
//    t1.ispis(); //Hose Murinjo - Omjer (W/D/L): 99 / 12 / 47
//    cout << "Placa: " << t1.izracunPlace() << endl; //Placa: 357523
//
//}
//
//
//Demonstrirajte polimorfizam u funkciji main.

#include <iostream>
#include <string>

using namespace std;


class Osoba {
public:
	string ime;
	string prezime;
	int osnovicaPlace;

	Osoba(string _ime, string _prezime, int _osnovicaPlace) : ime(_ime), prezime(_prezime), osnovicaPlace(_osnovicaPlace) {}

	virtual double izracunPlace() const = 0;

	virtual void ispis() const {
		cout << ime << " " << prezime << " - ";
	}

};

class Igrac : public Osoba{
public:
	int golovi;
	int asistencije;

	Igrac(string _ime, string _prezime, int _osnovicaPlace) : Osoba(_ime, _prezime, _osnovicaPlace) {
		golovi = 0;
		asistencije = 0;
	}

	void dodajGolove(int brojGolova) {
		golovi += brojGolova;
	}

	void dodajAsistencije(int brojAsistencija) {
		asistencije += brojAsistencija;
	}

	virtual double izracunPlace() const override {
		return osnovicaPlace + (golovi / 10 * 0.1 * osnovicaPlace) + (asistencije / 5 * 0.1 * osnovicaPlace);
	}

	virtual void ispis() const override {
		Osoba::ispis();
		cout << "golova : " << golovi << ", asistencije : " << asistencije << endl; 
	}
};

class Trener : public Osoba {
public:
	int pobjede;
	int remi;
	int izgubljene;

	Trener(string _ime, string _prezime, int _osnovicaPlace) : Osoba(_ime, _prezime, _osnovicaPlace){
		pobjede = 0;
		remi = 0;
		izgubljene = 0;
	}

	void dodajPobjede(int brojPobjeda) {
		pobjede += brojPobjeda;
	}

	void dodajRemi(int brojRemi) {
		remi += brojRemi;
	}

	void dodajIzgubljene(int brojIzgubljenih) {
		izgubljene += brojIzgubljenih;
	}
	
	virtual double izracunPlace() const override {
		return osnovicaPlace + (pobjede / 5 * 0.1 * osnovicaPlace) + (remi / 10 * 0.1 * osnovicaPlace) - (izgubljene / 8 * 0.1 * osnovicaPlace);
	}

	virtual void ispis() {
		Osoba::ispis();
		cout << "Omjer (W/D/L) : " << pobjede << " / " << remi << " / " << izgubljene << endl;
	}
};

int main()
{
	Igrac i("Luka", "Modric", 100000); //Ime, prezime, osnovica plaće
	i.dodajGolove(7);
	i.dodajAsistencije(12);
	i.ispis(); //Luka Modric - golova: 7, asistencija: 12
	cout << "Placa: " << i.izracunPlace() << endl; //Placa: 120000

	Igrac i2("C", "Ronaldo", 234505);
	i2.dodajGolove(57);
	i2.dodajAsistencije(32);
	i2.ispis(); //C Ronaldo - Golova : 57, Asistencije : 32.
	cout << "Placa: " << i2.izracunPlace() << endl; //Placa : 492461

	Trener t1("Hose", "Murinjo", 143009); //Ime, prezime, osnovica plaće
	t1.dodajPobjede(88); //Dodati broj pobjeda (W)
	t1.dodajRemi(12); //Dodati broj neriješenih utakmica (D)
	t1.dodajIzgubljene(0); //Dodati broj izgubljenih (L)
	t1.ispis(); //Hose Murinjo - Omjer (W/D/L): 88 / 12 / 0
	cout << "Placa: " << t1.izracunPlace() << endl; //Placa: 400425

	t1.dodajPobjede(11);
	t1.dodajIzgubljene(47);
	t1.ispis(); //Hose Murinjo - Omjer (W/D/L): 99 / 12 / 47
	cout << "Placa: " << t1.izracunPlace() << endl; //Placa: 357523

}
