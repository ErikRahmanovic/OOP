#include <iostream>
#include <vector>

using namespace std;

class Student {
public:
    string imePrezime, jmbag;
    Student(string _imePrezime, string _jmbag) : imePrezime(_imePrezime), jmbag(_jmbag) {}


    friend ostream& operator<<(ostream& os, const Student& student) {
        os << student.imePrezime << " (" << student.jmbag << ")";
        return os;
    }
};

class Bodovi {
public:
    int bodovi;
    Student student;
    Bodovi(Student _student, int _bodovi) : student(_student), bodovi(_bodovi) {}

    
    friend ostream& operator<<(ostream& os, const Bodovi& bodovi) {
        os << bodovi.student << " - " << bodovi.bodovi << " bodova";
        return os;
    }
};

class Kolegij {
public:
    string naziv;
    vector<Bodovi> bodovi;
    Kolegij(string _naziv, vector<Bodovi> _bodovi) : naziv(_naziv), bodovi(_bodovi) {
        for (int i = 0; i < bodovi.size(); i++) {
            cout << bodovi[i].student << " " << bodovi[i].bodovi << endl;
        }
    }

};

int main() {
    vector<Bodovi> OOPBodovi{
        Bodovi(Student("Ivana Ivic", "0246002475"), 25),
        Bodovi(Student("Ivica Ivanovic", "0246005654"), 20),
        Bodovi(Student("Marko Markic", "0246004234"), 32)
    };

    Kolegij OOP("Objektno orijentirano programiranje", OOPBodovi);
    return 0;
}
