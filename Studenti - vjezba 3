#include <iostream>
#include <string>
#include <vector>
#include <algorithm>


using namespace std;

class Student {
public:
    string ime;
    string JMBAG;
    int brojBodova;

    Student(string _ime, string _JMBAG) : ime(_ime), JMBAG(_JMBAG) {}

    ~Student() {}
};


class Kolegij {
public: 
    vector<Student*> student;


    void dodaj(Student* noviStudent);

    Kolegij() {};

    ~Kolegij() {
        for (int i = 0; i < student.size(); i++) {
            delete student[i];
        }
        student.clear();
    }

    Kolegij(const Kolegij& kolegij) {
        for (int i = 0; i < kolegij.student.size(); i++) {
            student.push_back(new Student(*kolegij.student[i]));
        }
    }

    Kolegij& operator=(const Kolegij& kolegij) {
        if (this != &kolegij) {
            for (int i = 0; i < student.size(); i++) {
                delete student[i];
            }

            student.clear();
            for (int i = 0; i < kolegij.student.size(); i++) {
                student.push_back(new Student(*kolegij.student[i]));
            }
        }
        return *this;
    }

    Kolegij(Kolegij&& s) {
        for (int i = 0; i < s.student.size(); i++) {
            student.push_back(s.student[i]);
            s.student[i] = NULL;
        }
    }

};


void Kolegij::dodaj(Student* noviStudent) {
    student.push_back(noviStudent);
}


int main() {
    Kolegij OOP;
    OOP.dodaj(new Student("Ante Antic", "02460123456"));
    OOP.dodaj(new Student("Ivica Ivic", "02460567890"));

    Kolegij OOP2 = OOP;
    OOP.student[0]->brojBodova = 10;
    OOP2.student[0]->brojBodova = 20;
    cout << OOP.student[0]->brojBodova << endl; // 10
    cout << OOP2.student[0]->brojBodova << endl; // 20

    Kolegij Java;
    Java = OOP2;
    OOP2.student[0]->brojBodova = 10;
    Java.student[0]->brojBodova = 20;
    cout << OOP2.student[0]->brojBodova << endl; // 10
    cout << Java.student[0]->brojBodova << endl; // 20
    return 0;
}
